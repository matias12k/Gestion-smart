# Generated by Django 5.1.1 on 2024-09-25 01:55

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('name', models.CharField(max_length=255)),
                ('dni', models.CharField(blank=True, max_length=15, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=500, null=True)),
                ('email', models.EmailField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('commune', models.CharField(blank=True, max_length=255, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('executive', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('name', models.CharField(max_length=255)),
                ('vehicle_plate', models.CharField(blank=True, max_length=14, null=True)),
                ('dni', models.CharField(blank=True, max_length=15, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Residue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('name', models.CharField(max_length=300)),
                ('type_medition', models.CharField(max_length=100)),
                ('product_type', models.CharField(blank=True, choices=[('fruits_vegetables', 'Frutas y Verduras'), ('dairy', 'Lácteos'), ('meat', 'Carnes'), ('seafood', 'Mariscos'), ('bakery', 'Panadería'), ('beverages', 'Bebidas'), ('frozen', 'Congelados'), ('canned_goods', 'Enlatados'), ('snacks', 'Snacks y Dulces'), ('cleaning', 'Productos de Limpieza'), ('personal_care', 'Cuidado Personal'), ('household', 'Artículos para el Hogar'), ('baby_products', 'Productos para Bebés'), ('pet_products', 'Productos para Mascotas'), ('grains', 'Granos y Cereales'), ('condiments', 'Condimentos y Salsas'), ('pasta_rice', 'Pastas y Arroces'), ('spices', 'Especias'), ('oils', 'Aceites'), ('health_products', 'Productos de Salud'), ('alcohol', 'Bebidas Alcohólicas'), ('prepared_foods', 'Comidas Preparadas'), ('confectionery', 'Confitería'), ('other', 'Otros')], max_length=100, null=True)),
                ('quantity', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RegisterResidue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('quantity', models.IntegerField(default=0)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('residue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resoliq.residue')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion.', verbose_name='created at')),
                ('modified', models.DateTimeField(auto_now_add=True, help_text='Fecha de modificacion.', verbose_name='modified at')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('is_reposition', models.BooleanField(default=False)),
                ('observation', models.TextField(blank=True, max_length=1200, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resoliq.client')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resoliq.driver')),
                ('registers', models.ManyToManyField(to='resoliq.registerresidue')),
            ],
            options={
                'ordering': ['-created', '-modified'],
                'abstract': False,
            },
        ),
    ]
